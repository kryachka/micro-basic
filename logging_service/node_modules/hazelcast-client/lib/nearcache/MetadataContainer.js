"use strict";
/*
 * Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @ignore */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataContainer = void 0;
const Long = require("long");
/** @internal */
class MetadataContainer {
    constructor() {
        this.sequence = Long.fromNumber(0);
        this.staleSequence = Long.fromNumber(0);
        this.missedSequenceCount = Long.fromNumber(0);
    }
    reset() {
        this.sequence = Long.fromNumber(0);
        this.staleSequence = Long.fromNumber(0);
        this.missedSequenceCount = Long.fromNumber(0);
    }
    setSequence(sequence) {
        this.sequence = sequence;
    }
    getSequence() {
        return this.sequence;
    }
    setStaleSequence(staleSequence) {
        this.staleSequence = staleSequence;
    }
    getStaleSequence() {
        return this.staleSequence;
    }
    increaseMissedSequenceCount(missed) {
        this.missedSequenceCount = this.missedSequenceCount.add(missed);
    }
    getMissedSequenceCount() {
        return this.missedSequenceCount;
    }
    setUuid(uuid) {
        this.uuid = uuid;
    }
    getUuid() {
        return this.uuid;
    }
}
exports.MetadataContainer = MetadataContainer;
