"use strict";
/*
 * Copyright (c) 2008-2021, Hazelcast, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @ignore */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LazyReadResultSet = void 0;
/** @internal */
class LazyReadResultSet {
    constructor(serializationService, readCount, items, itemSeqs, nextSeq) {
        this.serializationService = serializationService;
        this.readCount = readCount;
        this.items = items;
        this.itemSeqs = itemSeqs;
        this.nextSeq = nextSeq;
    }
    getReadCount() {
        return this.readCount;
    }
    get(index) {
        const dataOrObject = this.items[index];
        if (dataOrObject == null) {
            return undefined;
        }
        if (this.serializationService.isData(dataOrObject)) {
            const obj = this.serializationService.toObject(dataOrObject);
            this.items[index] = obj;
            return obj;
        }
        else {
            return dataOrObject;
        }
    }
    getSequence(index) {
        return this.itemSeqs[index];
    }
    size() {
        return this.items.length;
    }
    getNextSequenceToReadFrom() {
        return this.nextSeq;
    }
}
exports.LazyReadResultSet = LazyReadResultSet;
